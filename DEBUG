===============================================================================
Base32 Alphabet
===============================================================================
0   1   2   3   4   5   6   7   8   9   10  11  12  13  14  15  16  17  18  19
A   B   C   D   E   F   G   H   I   J   K   L   M   N   O   P   Q   R   S   T
-------------------------------------------------------------------------------
20  21  22  23  24  25  26  27  28  29  30  31
U   V   W   X   Y   Z   2   3   4   5   6   7
-------------------------------------------------------------------------------

===============================================================================
ENCODE - Bitwise Operations on Test Vector
===============================================================================
Note                128 64  32  16  8   4   2   1       dec     char    pass
-------------------------------------------------------------------------------
H                   0   1   0   0   1   0   0   0       72      H
H >> 3              0   0   0   0   1   0   0   1       9       J*      PASS
-------------------------------------------------------------------------------
H                   0   1   0   0   1   0   0   0       72      H
mask = 0xff >> 5    0   0   0   0   0   1   1   1
buf = H & mask      0   0   0   0   0   0   0   0
stash buf << 2      0   0   0   0   0   0   0   0
0xff >> 2           0   0   1   1   1   1   1   1
    ^0xff           1   1   1   1   1   1   1   1
    mask =          1   1   0   0   0   0   0   0
e                   0   1   1   0   0   1   0   1
    & mask =        0   1   0   0   0   0   0   0
    >> 6 =          0   0   0   0   0   0   0   1       1       B*      PASS
-------------------------------------------------------------------------------
e                   0   1   1   0   0   1   0   1       101     e
    >> 1            0   0   1   1   0   0   1   0       50      g*      FAIL
                                                                [want s]

e                   0   1   1   0   0   1   0   1
0xff >> 2 = mask    0   0   1   1   1   1   1   1
e & mask            0   0   1   0   0   1   0   1   [mask previously used bits]
    >> 1            0   0   0   1   0   0   1   0       18      S*      PASS
-------------------------------------------------------------------------------
...


================================================================================
DECODE - Bitwise Operations
================================================================================
Note                128 64  32  16  8   4   2   1       dec     char    pass
--------------------------------------------------------------------------------
buf = J [base32]    .   .   .   0   1   0   0   1       9               rem = 3
buf << 3            0   1   0   0   1   .   .   .
    | 0x00          0   0   0   0   0   0   0   0
    =               0   1   0   0   1   0   0   0                       ascii[0]
buf = B             .   .   .   0   0   0   0   1       1               next b32
buf >> 2            .   .   .   .   .   0   0   0
    | ascii[0]      0   1   0   0   1   0   0   0                       j = 1
    =               0   1   0   0   1   0   0   0       72      H       PASS
buf                 .   .   .   0   0   0   0   1
    & (0xff >> 6)   0   0   0   0   0   0   1   1
    =               .   .   .   .   .   .   0   1                   buf, rem = 6
    << 6            0   1   .   .   .   .   .   .                       ascii[1]
buf = S             .   .   .   1   0   0   1   0       18              rem = 1
buf << 1            .   .   1   0   0   1   0   .
    | ascii[1]      0   1   .   .   .   .   .   .
    =               0   1   1   0   0   1   0   .                       ascii[1]
buf = W             .   .   .   1   0   1   1   0       22
buf >> 4            .   .   .   .   .   .   .   1
    | ascii[1]      0   1   1   0   0   1   0   .
    =               0   1   1   0   0   1   0   1       101     e       PASS
--------------------------------------------------------------------------------
...